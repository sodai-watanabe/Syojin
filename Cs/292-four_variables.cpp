// AB+CD=Nを満たす正整数(A,B,C,D)の組の数を求めよ

// 方針：X+Y=Nとして、変数を減らす。
// X,Yそれぞれにおける約数の数を求める。X,Yは独立なので、それぞれの約数の個数をかけたものが総数になる。
// (X,Y)における総数を足し合わせたものが答え。

// 教訓：多変数問題は工夫して変数を減らす。
// 教訓：xの約数の個数 → xを1<i*i<=xの範囲でxをiで割る。割った余りが0ならばiはxの約数。
// 教訓：約数の数え方 → ①後半は入れ替えた組なので前半だけ探す。i*i<=xの範囲。②i*i!=xの時は、後半の分のペアの分も加算。i*i=xの時は真ん中(2乗)なので、余計に加算しない。
// 復習1/14 

#include <bits/stdc++.h>
using namespace std;
using ll = long long;

int main () {
    ll N;
    cin >> N;

    ll ans = 0;

    for (ll x=1; x<N; x++) {
        int y = N - x;  // 変数を減らした。

        int cx = 0; // xを作る整数ペアの個数(A,Bの組み合わせの個数)
        int cy = 0; // yについても同様

        // xを作るペアの個数を求める
        for (ll i=1; i*i<=x; i++) {  // 前半部分だけ探せば後半は入れ替えなので決定する。→ i*i<=xの範囲でよい

            // xをiで割ったあまりが0 → xは(整数)×(整数)でかける。 
            if (x%i==0) {
                cx++; // (整数)×(整数)にできるペアの個数を加算
                if (x!=i*i) cx++; // 後半の入れ替えたペアの分も加算。ペアが(a,a)だったら真ん中なので片割れはない。
            }
        }
        // yを作るペアの個数を求める
        for (ll i=1; i*i<=y; i++) {
            if (y%i==0) {
                cy++;
                if (y!=i*i) cy++;
            }
        }

        ans += cx*cy; // xとyの約数は独立なので、これらの通り数は掛け算でよい。
    }

    cout << ans << endl;
}